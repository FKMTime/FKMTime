name: Watch proxied-nginx GHCR image and run on update

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

permissions:
  contents: write
  actions: write

concurrency:
  group: watch-external-ghcr
  cancel-in-progress: false

env:
  IMAGE_REPO: fkmtime/fkmtime-proxied-nginx
  IMAGE_TAG: master
  STATE_VAR: FKMTIME_PROXIED_NGINX_MASTER_DIGEST
  EVENT_TYPE: ghcr-image-updated
  DISPATCH_REPOS: ""
  TARGET_WORKFLOWS: ""

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.get.outputs.digest }}
      changed: ${{ steps.diff.outputs.changed }}
      previous: ${{ steps.diff.outputs.previous }}
    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Get current digest (via docker manifest inspect)
        id: get
        shell: bash
        run: |
          set -euo pipefail
          REPO="${{ env.IMAGE_REPO }}"
          TAG="${{ env.IMAGE_TAG }}"
          MANIFEST=$(docker manifest inspect ghcr.io/${REPO}:${TAG})
          DIGEST=$(echo "${MANIFEST}" | jq -r '.manifests[] | select(.platform.architecture == "amd64" and .platform.os == "linux") | .digest')
          if [ -z "${DIGEST}" ]; then
            echo "Failed to resolve digest for ${REPO}:${TAG}" >&2
            exit 1
          fi
          echo "digest=${DIGEST}" >> "${GITHUB_OUTPUT}"
          echo "Current digest: ${DIGEST}"

      - name: Compare with last stored digest
        id: diff
        shell: bash
        env:
          LAST: ${{ vars.FKMTIME_PROXIED_NGINX_MASTER_DIGEST }}
        run: |
          set -euo pipefail
          CUR='${{ steps.get.outputs.digest }}'
          echo "previous=${LAST:-}" >> "${GITHUB_OUTPUT}"
          if [ -z "${LAST:-}" ]; then
            echo "No previous digest stored."
            echo "changed=true" >> "${GITHUB_OUTPUT}"
          elif [ "${CUR}" != "${LAST}" ]; then
            echo "Digest changed: ${LAST} -> ${CUR}"
            echo "changed=true" >> "${GITHUB_OUTPUT}"
          else
            echo "No change."
            echo "changed=false" >> "${GITHUB_OUTPUT}"
          fi

  trigger_downstreams:
    needs: check
    if: needs.check.outputs.changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: repository_dispatch in this repo
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDispatchEvent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              event_type: '${{ env.EVENT_TYPE }}',
              client_payload: {
                image: 'ghcr.io/${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}',
                tag: '${{ env.IMAGE_TAG }}',
                digest: '${{ needs.check.outputs.digest }}',
                previous: '${{ needs.check.outputs.previous }}'
              }
            });
            console.log('Dispatched ${{ env.EVENT_TYPE }} to ${{ github.repository }}');

  persist_state:
    needs: check
    if: needs.check.outputs.changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Update stored digest (repo variable)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_DIGEST: ${{ needs.check.outputs.digest }}
          STATE_VAR: ${{ env.STATE_VAR }}
        run: |
          set -euo pipefail
          gh variable set "${STATE_VAR}" --body "${NEW_DIGEST}"
          echo "Saved digest to ${STATE_VAR}: ${NEW_DIGEST}"
