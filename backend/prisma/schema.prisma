generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id        Int      @id @default(autoincrement())
  password  String
  email     String
  username  String?  @unique
  notificationToken String?
  role      Role?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Person {
  id           Int       @id @default(autoincrement())
  registrantId Int
  name         String
  wcaId        String?
  countryIso2  String?
  gender       String
  cardId       String?   @db.LongText()
  Result       Result[]
  Attempt      Attempt[]
}

model Competition {
  id               Int     @id @default(autoincrement())
  wcaId            String
  name             String
  shortName        String
  countryIso2      String?
  currentGroupId   String?
  wcif             Json?
  scoretakingToken String?
}

model Result {
  id        Int       @id @default(autoincrement())
  personId  Int?
  person    Person?   @relation(fields: [personId], references: [id])
  eventId   String
  roundId   String
  groupId   String
  Attempt   Attempt[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Attempt {
  id             Int       @id @default(autoincrement())
  resultId       Int?
  result         Result?   @relation(fields: [resultId], references: [id])
  attemptNumber  Int
  replacedBy     Int?
  isDelegate     Boolean   @default(false)
  extraGiven     Boolean   @default(false)
  isResolved     Boolean?  @default(false)
  penalty        Int?
  isExtraAttempt Boolean   @default(false)
  value          Int
  judgeId        Int?
  judge          Person?   @relation(fields: [judgeId], references: [id])
  stationId      Int?
  station        Station?  @relation(fields: [stationId], references: [id])
  solvedAt       DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Station {
  id        Int       @id @default(autoincrement())
  name      String
  espId     String?   @db.LongText()
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Attempt   Attempt[]
}

enum Role {
  ADMIN
  DELEGATE
}

enum Activity {
  COMPETITOR
  JUDGE
  RUNNER
  SCRAMBLER
}
