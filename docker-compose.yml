services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: fkmtime-dev-backend
    network_mode: host
    volumes:
      - ./backend/src:/app/src
      - ./backend/prisma:/app/prisma
      - sock:/app/sock
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgres://root:password@127.0.0.1:5433/fkm_time
      - WCA_LIVE_API_ORIGIN=http://0.0.0.0:4000/api
      - CUBING_CONTESTS_API_ORIGIN=http://0.0.0.0:5001/api
      - WCA_ORIGIN=http://0.0.0.0:3005
      - WCA_CLIENT_ID=example-application-id
      - WCA_CLIENT_SECRET=example-secret
      - SOCKET_PATH=/app/sock/socket.sock
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 5s
      timeout: 20s
      retries: 50

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: fkmtime-dev-frontend
    environment:
      - VITE_WCA_ORIGIN=http://0.0.0.0:3005
      - VITE_GIT_COMMIT=dummy-commit
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/index.html:/app/index.html
    ports:
      - "5173:5173"
    restart: unless-stopped

  database:
    image: postgres:16
    container_name: fkmtime-dev-database
    ports:
      - "5433:5432"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=fkm_time
    volumes:
      - dev_database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 5s
      timeout: 20s
      retries: 50
    
  api_tester:
    build:
      context: ./backend/api-tester
      dockerfile: Dockerfile.dev
    container_name: fkmtime-dev-api-tester
    # Feel free to change this if you are not using CubingContests
    ports:
      - "5002:5001" 
    environment:
      - SOCKET_PATH=/app/sock/socket.sock
    volumes:
      - ./backend/api-tester/src:/app/src
      - sock:/app/sock
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
  
  dummy_wca:
    container_name: fkmtime-dev-dummy-wca
    restart: unless-stopped
    image: maxidragon/dummy-wca:main
    # Feel free to change this if you are not using CubingContests
    ports:
    - "3005:3000"

  dummy_wca_live:
    container_name: fkmtime-dev-dummy-wca-live
    restart: unless-stopped
    image: maxidragon/dummy-wca-live:main
    ports:
      - "4000:4000"

  micro_connector:
    image: "ghcr.io/fkmtime/fkmtime-micro-connector:master"
    container_name: micro-connector
    network_mode: host
    volumes:
      - /run/dbus:/run/dbus:ro
      - sock:/app/sock
      - /tmp/fkm-build:/app/firmware
      - /tmp/fkm-logs:/logs
    environment:
      - PORT=8080
      - FIRMWARE_DIR=/app/firmware
      - RUST_LOG=none,backend=debug
      - SOCKET_PATH=/app/sock/socket.sock
      - DEVICE_LOGS=/logs
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy

volumes:
  dev_database:
  sock:
